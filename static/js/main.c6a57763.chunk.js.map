{"version":3,"sources":["components/Header.js","components/Error.js","components/Formulario.js","components/Clima.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","guardarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","App","componente","consultar","guardarResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6a57763.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n        <nav>\r\n            <div className=\"nav-wrapper light-blue darken-2\">\r\n                 <a href=\"#!\" className=\"brand-logo\">{titulo}</a>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Error = ({mensaje}) => {\r\n    return ( \r\n        <p className=\"red darken-4 error\">{mensaje}</p>\r\n     );\r\n}\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Error;","import React, { useState } from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Formulario = ({busqueda, guardarBusqueda, guardarConsultar}) => {\r\n\r\n\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // extraer ciudad y pais\r\n    const { ciudad, pais } = busqueda;\r\n\r\n    // función que coloca los elementos en el state\r\n    const handleChange = e => {\r\n        // actualizar el state\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    // Cuando el usuario da submit al form\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // validar\r\n        if(ciudad.trim() === '' || pais.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        guardarConsultar(true);\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {error ? <Error mensaje=\"Ambos campos son obligatorios\" /> : null }\r\n            \r\n            <div className=\"input-field col s12\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"ciudad\"\r\n                    id=\"ciudad\"\r\n                    value={ciudad}\r\n                    onChange={handleChange}\r\n                />\r\n                <label htmlFor=\"ciudad\">Ciudad: </label>\r\n            </div>\r\n\r\n            <div className=\"input-field col s12\">\r\n                <select\r\n                    name=\"pais\"\r\n                    id=\"pais\"\r\n                    value={pais}\r\n                    onChange={handleChange}\r\n                >\r\n                    <option value=\"\">-- Seleccione un país --</option>\r\n                    <option value=\"US\">Estados Unidos</option>\r\n                    <option value=\"MX\">México</option>\r\n                    <option value=\"AR\">Argentina</option>\r\n                    <option value=\"CO\">Colombia</option>\r\n                    <option value=\"CR\">Costa Rica</option>\r\n                    <option value=\"ES\">España</option>\r\n                    <option value=\"PE\">Perú</option>\r\n                </select>\r\n                <label htmlFor=\"pais\">País: </label>\r\n            </div>\r\n\r\n            <div className=\"input-field col s12\">\r\n                <input  \r\n                    type=\"submit\"\r\n                    value=\"Buscar Clima\"\r\n                    className=\"waves-effect waves-light btn-large btn-block yellow accent-4\"\r\n                />\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    busqueda : PropTypes.object.isRequired,\r\n    guardarBusqueda : PropTypes.func.isRequired,\r\n    guardarConsultar : PropTypes.func.isRequired,\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Clima = ({resultado}) => {\r\n\r\n    // extraer los valores\r\n    const { name, main } = resultado;\r\n\r\n    if(!name) return null;\r\n\r\n    // Grados kelvin\r\n    const kelvin = 273.15;\r\n\r\n    return ( \r\n        <div className=\"card-panel white col s12\">\r\n            <div className=\"black-text\">\r\n                <h2>El clima de {name} es: </h2>\r\n                <p className=\"temperatura\">\r\n                    { parseFloat( main.temp - kelvin, 10 ).toFixed(2) }  <span> &#x2103; </span>\r\n                </p>\r\n                <p>Temperatura Máxima:\r\n                    { parseFloat( main.temp_max - kelvin, 10 ).toFixed(2) }  <span> &#x2103; </span>\r\n                </p>\r\n                <p>Temperatura Minima:\r\n                    { parseFloat( main.temp_min - kelvin, 10 ).toFixed(2) }  <span> &#x2103; </span>\r\n                </p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nClima.propTypes = {\r\n    resultado: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Clima;","import React, { Fragment, useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Clima from './components/Clima';\nimport Error from './components/Error';\n\nfunction App() {\n\n    // state del formulario\n  const [busqueda, guardarBusqueda] = useState({ \n      ciudad: '',\n      pais: ''\n  });\n  const [consultar, guardarConsultar] = useState(false);\n  const [resultado, guardarResultado] = useState({});\n  const [error, guardarError] = useState(false);\n\n  const { ciudad, pais } = busqueda;\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n\n        if(consultar) {\n          const appId = '508e511638b3e6e82a9c0083ad775dd4';\n          const url = `http://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n  \n          const respuesta = await fetch(url);\n          const resultado = await respuesta.json();\n  \n          guardarResultado(resultado);\n          guardarConsultar(false);\n\n          // Detecta si hubo resultados correctos en la consulta\n\n          if(resultado.cod === \"404\") {\n              guardarError(true);\n          } else {\n              guardarError(false);\n          }\n        }\n        \n    }\n    consultarAPI();\n    // eslint-disable-next-line\n  },[consultar]);\n\n  let componente;\n  if(error) {\n    componente = <Error mensaje=\"No hay resultados\" />\n  } else {\n    componente = <Clima \n                    resultado={resultado}\n                />\n  }\n\n\n\n  return (\n    <Fragment>\n        <Header \n          titulo='Clima React App'\n        />\n\n        <div className=\"contenedor-form\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col m6 s12\">\n                        <Formulario \n                          busqueda={busqueda}\n                          guardarBusqueda={guardarBusqueda}\n                          guardarConsultar={guardarConsultar}\n                        />\n                    </div>\n                    <div className=\"col m6 s12\">\n                        {componente}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </Fragment>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}